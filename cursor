TRIGGER
CREATE TABLE customer (
    acc_no INTEGER PRIMARY KEY,
    cust_name VARCHAR(20),
    avail_balance DECIMAL
);
CREATE TABLE mini_statement (
    acc_no INTEGER,
    avail_balance DECIMAL,
    FOREIGN KEY (acc_no) REFERENCES customer(acc_no) ON DELETE CASCADE
);
INSERT INTO customer VALUES (1000, "Fanny", 7000);
INSERT INTO customer VALUES (1001, "Peter", 12000);
select * from customer;
 
 
DELIMITER //
CREATE TRIGGER update_cus
BEFORE UPDATE ON customer
FOR EACH ROW
BEGIN
    INSERT INTO mini_statement VALUES (OLD.acc_no, OLD.avail_balance);
END //
DELIMITER ;
UPDATE customer SET avail_balance = avail_balance + 3000 WHERE acc_no = 1001;
UPDATE customer SET avail_balance = avail_balance + 3000 WHERE acc_no = 1000;
select * from customer;
 
select * from mini_statement;
 
CURSOR 
DELIMITER //

CREATE PROCEDURE GetCustomerDetails()
BEGIN
    DECLARE c_cust_name VARCHAR(20);
    DECLARE c_avail_balance DECIMAL;
    SELECT cust_name, avail_balance INTO c_cust_name, c_avail_balance 
    FROM customer 
    WHERE acc_no = 1000;
    SELECT CONCAT('Customer Name: ', c_cust_name, ', Available Balance: ', c_avail_balance) AS CustomerInfo;
END //

DELIMITER ;
CALL GetCustomerDetails();
 
